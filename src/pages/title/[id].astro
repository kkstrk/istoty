---
import { Cloudinary } from "@cloudinary/url-gen";
import { fit } from '@cloudinary/url-gen/actions/resize';

import Layout from '../../layouts/Layout.astro';
import data from '../data.json';

export function getStaticPaths() {
  return data.map(({ id }) => ({ params: { id } }));
}

const { id } = Astro.params;

const {
    title,
    images: _images,
    text,
    videos,
} = data.find((item) => item.id === id);

const cloudinary = new Cloudinary({
	cloud: { cloudName: 'istoty' }
});

const images = _images.map((image) => (
    cloudinary.image(image)
        .resize(fit().width(1000))
        .toURL()
));
---
<Layout page={title}>
    {!!videos.length && (
        <section class="video">
            {videos.map((video) => (
                <iframe
                    src={video}
                    title={title}
                    frameborder="0"
                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                    allowfullscreen>
                </iframe>
            ))}
        </section>
    )}
    {!!text.length && (
        <section class="text">
            <h2>{title}</h2>
            {text.map(lines => <p>{lines.join('\n')}</p>)}
        </section>
    )}
    {!!images.length && (
        <section class="images splide">
            <div class="splide__track">
                <ul class="splide__list">
                    {images.map(image => (
                        <li class="splide__slide">
                            <img src={image} />
                        </li>
                    ))}
                </ul>
            </div>
        </section>
    )}
</Layout>

<script>
    import Splide from '@splidejs/splide';
    import '@splidejs/splide/css';

    new Splide('.splide', {
        type: 'loop',
        height: '500px',
        focus: 'center',
        autoWidth: true,
        pagination: false,
    }).mount();
</script>

<style>
    .video,
    .text {
        padding: 0 var(--margin-horizontal);
    }
    .text,
    .images {
        margin: var(--margin-horizontal) 0;
    }

    .video {
        display: flex;
        justify-content: center;
        gap: 1rem;
    }
    .video > iframe {
        width: 100%;
        aspect-ratio: 16/9;
    }

    .text {
        align-self: stretch;
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }
    .text > h2 {
        margin: 0;
    }
    .text > p {
        margin: 0;
        overflow-wrap: break-word;
    }
    .text > p:nth-of-type(2) {
        font-size: 0.9rem;
        white-space: pre;
    }

    .images {
        align-self: stretch;
        display: flex;
        overflow: hidden;
        gap: var(--margin-horizontal);
    }
    img {
        height: 500px;
        margin: 0 var(--margin-horizontal);
    }

    @media (min-width: 992px) {
        .video,
        .text {
            padding: 0;
        }

        .video > iframe {
            max-width: 50%;
        }

        .text {
            align-self: center;
            width: 50%;
            overflow: hidden;
            display: grid;
            grid-template-areas:
                "h p2"
                "p1 p2";
            grid-template-rows: repeat(2, auto);
            grid-template-columns: repeat(2, 1fr);
            gap: 0 3rem;
        }
        .text > h2 {
            grid-area: h;
            margin-bottom: 1rem;
        }
        .text > p:nth-of-type(1) {
            grid-area: p1;
        }
        .text > p:nth-of-type(2) {
            grid-area: p2;
            text-align: end;
        }
    }
</style>